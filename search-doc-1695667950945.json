[{"title":"Signal","type":0,"sectionRef":"#","url":"/ClientCast/api/Signal","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Signal","url":"/ClientCast/api/Signal#functions","content":" "},{"title":"Connect​","type":1,"pageTitle":"Signal","url":"/ClientCast/api/Signal#Connect","content":"&lt;/&gt; Signal:Connect(Callback: function) → Connection Connects a callback to the Signal, which will be called everytime the Signal is fired. "},{"title":"ClientCast","type":0,"sectionRef":"#","url":"/ClientCast/api/ClientCast","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"ClientCast","url":"/ClientCast/api/ClientCast#types","content":" "},{"title":"Settings​","type":1,"pageTitle":"ClientCast","url":"/ClientCast/api/ClientCast#Settings","content":"&lt;/&gt; interface Settings { AttachmentName: string DebugAttachmentName: string FunctionDebug: boolean DebugMode: boolean DebugColor: Color3 DebugLifetime: number AutoSetup: boolean } The settings which ClientCast relies on for module behavior. "},{"title":"Properties​","type":1,"pageTitle":"ClientCast","url":"/ClientCast/api/ClientCast#properties","content":" "},{"title":"Settings​","type":1,"pageTitle":"ClientCast","url":"/ClientCast/api/ClientCast#Settings","content":"&lt;/&gt; ClientCast.Settings: Settings  "},{"title":"Functions​","type":1,"pageTitle":"ClientCast","url":"/ClientCast/api/ClientCast#functions","content":" "},{"title":"new​","type":1,"pageTitle":"ClientCast","url":"/ClientCast/api/ClientCast#new","content":"&lt;/&gt; ClientCast.new( Object: Instance , RaycastParameters: RaycastParams, NetworkOwner: Player ) → ClientCaster  "},{"title":"Connection","type":0,"sectionRef":"#","url":"/ClientCast/api/Connection","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Connection","url":"/ClientCast/api/Connection#properties","content":" "},{"title":"Connected​","type":1,"pageTitle":"Connection","url":"/ClientCast/api/Connection#Connected","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Connection.Connected: boolean A boolean which determines whether the Connection is currently active. "},{"title":"Functions​","type":1,"pageTitle":"Connection","url":"/ClientCast/api/Connection#functions","content":" "},{"title":"Disconnect​","type":1,"pageTitle":"Connection","url":"/ClientCast/api/Connection#Disconnect","content":"&lt;/&gt; Connection:Disconnect() → () Disonnects the Connection, with any :Fire calls no longer updating it. "},{"title":"ClientCaster","type":0,"sectionRef":"#","url":"/ClientCast/api/ClientCaster","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"ClientCaster","url":"/ClientCast/api/ClientCaster#properties","content":" "},{"title":"RaycastParams​","type":1,"pageTitle":"ClientCaster","url":"/ClientCast/api/ClientCaster#RaycastParams","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; ClientCaster.RaycastParams: RaycastParams Returns the ClientCaster's set RaycastParams.  "},{"title":"Debug​","type":1,"pageTitle":"ClientCaster","url":"/ClientCast/api/ClientCaster#Debug","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; ClientCaster.Debug: boolean Returns whether the ClientCaster object has debug mode enabled, visualizing the ClientCaster's rays.  "},{"title":"Recursive​","type":1,"pageTitle":"ClientCaster","url":"/ClientCast/api/ClientCaster#Recursive","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; ClientCaster.Recursive: boolean Determines whether the Caster object will search for Raycast points (DmgPoints) from the whole object's descendants, rather then the object's direct children.  "},{"title":"Object​","type":1,"pageTitle":"ClientCaster","url":"/ClientCast/api/ClientCaster#Object","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; ClientCaster.Object: Instance  Returns the object that the ClientCaster is raycasting from.  "},{"title":"Owner​","type":1,"pageTitle":"ClientCaster","url":"/ClientCast/api/ClientCaster#Owner","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; ClientCaster.Owner: Player?  Returns the current Player who is the owner of the caster, or nil in case of the server. The owner calculates intersections, and as such it's recommended to have the client calculate it to have less of a burden on the server.  "},{"title":"Disabled​","type":1,"pageTitle":"ClientCaster","url":"/ClientCast/api/ClientCaster#Disabled","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; ClientCaster.Disabled: boolean Returns whether the ClientCaster is disabled (not raycasting).  "},{"title":"Collided​","type":1,"pageTitle":"ClientCaster","url":"/ClientCast/api/ClientCaster#Collided","content":"Events &lt;/&gt; ClientCaster.Collided: Signal&lt;RaycastResult&gt; Fires whenever any object intersects any one of the ClientCaster's rays.  "},{"title":"HumanoidCollided​","type":1,"pageTitle":"ClientCaster","url":"/ClientCast/api/ClientCaster#HumanoidCollided","content":"Events &lt;/&gt; ClientCaster.HumanoidCollided: Signal&lt;RaycastResult,Humanoid &gt; Fires whenever any of the ClientCaster's rays intersect with an object, whose ancestor Model has a Humanoid object. "},{"title":"Functions​","type":1,"pageTitle":"ClientCaster","url":"/ClientCast/api/ClientCaster#functions","content":" "},{"title":"DisableDebug​","type":1,"pageTitle":"ClientCaster","url":"/ClientCast/api/ClientCaster#DisableDebug","content":"&lt;/&gt; ClientCaster:DisableDebug() → () Disables the debug trails of the ClientCaster.  "},{"title":"StartDebug​","type":1,"pageTitle":"ClientCaster","url":"/ClientCast/api/ClientCaster#StartDebug","content":"&lt;/&gt; ClientCaster:StartDebug() → () Starts the debug trails of the ClientCaster.  "},{"title":"Start​","type":1,"pageTitle":"ClientCaster","url":"/ClientCast/api/ClientCaster#Start","content":"&lt;/&gt; ClientCaster:Start() → () Starts this ClientCaster object, beginning to raycast for the hit detection.  "},{"title":"Destroy​","type":1,"pageTitle":"ClientCaster","url":"/ClientCast/api/ClientCaster#Destroy","content":"&lt;/&gt; ClientCaster:Destroy() → () Destroys this ClientCaster object, cleaning up any remnant connections.  "},{"title":"Stop​","type":1,"pageTitle":"ClientCaster","url":"/ClientCast/api/ClientCaster#Stop","content":"&lt;/&gt; ClientCaster:Stop() → () Stops this ClientCaster object, stopping raycasts for hit detection.  "},{"title":"SetOwner​","type":1,"pageTitle":"ClientCaster","url":"/ClientCast/api/ClientCaster#SetOwner","content":"&lt;/&gt; ClientCaster:SetOwner(NewOwner: Player ) → () Sets the given Player as owner for this caster object. When NewOwner is nil, the server will be the owner instead of a Player.  "},{"title":"GetOwner​","type":1,"pageTitle":"ClientCaster","url":"/ClientCast/api/ClientCaster#GetOwner","content":"&lt;/&gt; ClientCaster:GetOwner() → Player?  Returns the current Player who is the owner of the caster, or nil in case of the server. The owner calculates intersections, and as such it's recommended to have the client calculate it to have less of a burden on the server.  "},{"title":"SetObject​","type":1,"pageTitle":"ClientCaster","url":"/ClientCast/api/ClientCaster#SetObject","content":"&lt;/&gt; ClientCaster:SetObject(Object: Instance ) → () Sets this ClientCaster's object which it will raycast from to Object.  "},{"title":"GetObject​","type":1,"pageTitle":"ClientCaster","url":"/ClientCast/api/ClientCaster#GetObject","content":"&lt;/&gt; ClientCaster:GetObject() → Instance  Returns the object this ClientCaster is raycasting from.  "},{"title":"EditRaycastParams​","type":1,"pageTitle":"ClientCaster","url":"/ClientCast/api/ClientCaster#EditRaycastParams","content":"&lt;/&gt; ClientCaster:EditRaycastParams(RaycastParameters: RaycastParams) → () Updates the ClientCaster's RaycastParams property.  "},{"title":"SetRecursive​","type":1,"pageTitle":"ClientCaster","url":"/ClientCast/api/ClientCaster#SetRecursive","content":"&lt;/&gt; ClientCaster:SetRecursive(Recursive: boolean) → () when set to true, the ClientCaster object will search for Raycast points (DmgPoints) from the whole Object's descendants, rather then the Object's direct children. Useful for whole model hitboxes and characters. "}]